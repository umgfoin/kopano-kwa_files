Ext.ns("Ext.ux.form");Ext.ux.form.MetaForm=Ext.extend(Ext.form.FormPanel,{autoInit:true,border:false,focusFirstField:true,frame:true,loadingText:"Loading...",savingText:"Saving...",buttonMinWidth:90,columnCount:1,hasMeta:false,afterMetaChange:Ext.emptyFn,afterUpdate:Ext.emptyFn,applyDefaultValues:function(e){if("object"!==typeof e){return}for(var t in e){if(e.hasOwnProperty(t)){var n=this.form.findField(t);if(n){n.defaultValue=e[t]}}}},beforeAction:function(e,t){t.success=function(e){var t=this.processResponse(e);if(t===true||!t.success||!t.data){this.failureType=Ext.form.Action.LOAD_FAILURE;this.form.afterAction(this,false);return}this.form.afterAction(this,true);this.form.clearInvalid();this.form.setValues(t.data)}},bind:function(e){this.bindData(e)},bindData:function(e){this.data=e;this.form.setValues(this.data)},closeParentWindow:function(){if(this.ownerCt&&this.ownerCt.isXType("window")){this.ownerCt[this.ownerCt.closeAction]()}},findButton:function(e){var t=null;Ext.each(this.buttons,function(n){if(e===n.name){t=n}});return t},getButtons:function(){var e=[];if(Ext.isArray(this.createButtons)){Ext.each(this.createButtons,function(t){e.push(this.getButton(t,{handler:this.onButtonClick,scope:this,minWidth:this.buttonMinWidth,name:t}))},this)}return e},getOptions:function(e){e=e||{};var t={url:this.url,method:this.method||"POST"};Ext.apply(t,e);var n=this.baseParams?Ext.ux.util.clone(this.baseParams):{};t.params=Ext.apply(n,e.params);return t},getValues:function(){var e={};this.form.items.each(function(t){e[t.name]=t.getValue()});return e},initComponent:function(){var e={items:this.items||{}};if("function"===typeof this.getButton){e.buttons=this.getButtons()}Ext.apply(this,Ext.apply(this.initialConfig,e));Ext.ux.form.MetaForm.superclass.initComponent.apply(this,arguments);this.addEvents("beforemetachange","metachange","beforebuttonclick","buttonclick");this.form.on({beforeaction:{scope:this,fn:this.beforeAction},actioncomplete:{scope:this,fn:function(e,t){if("load"===t.type&&t.result.metaData){this.onMetaChange(this,t.result.metaData)}else if("submit"===t.type){this.updateBoundData()}}}});this.form.trackResetOnLoad=true},load:function(e){var t=this.getOptions(e);if(this.loadingText){t.waitMsg=this.loadingText}this.form.load(t)},onButtonClick:function(e,t){if(false===this.fireEvent("beforebuttonclick",this,e)){return}switch(e.name){case"meta":this.load({params:{meta:true}});break;case"load":this.load({params:{meta:!this.hasMeta}});break;case"defaults":this.setDefaultValues();break;case"reset":this.form.reset();break;case"save":this.updateBoundData();this.submit();this.closeParentWindow();break;case"ok":this.updateBoundData();this.closeParentWindow();break;case"cancel":this.closeParentWindow();break}this.fireEvent("buttonclick",this,e)},onMetaChange:function(form,meta){if(false===this.fireEvent("beforemetachange",this,meta)){return}this.removeAll();this.hasMeta=false;var columns,colIndex,tabIndex,ignore={};this.add(new Ext.Panel({layout:"column",anchor:"100%",border:false,defaults:function(){this.columnCount=meta.formConfig?meta.formConfig.columnCount||this.columnCount:this.columnCount;return Ext.apply({},meta.formConfig||{},{columnWidth:1/this.columnCount,autoHeight:true,border:false,hideLabel:true,layout:"form"})}.createDelegate(this)(),items:function(){var e=[];for(var t=0;t<this.columnCount;t++){e.push({defaults:this.defaults,listeners:{add:{scope:this,fn:this.onAdd}}})}return e}.createDelegate(this)()}));columns=this.items.get(0).items;colIndex=0;tabIndex=1;if(Ext.isArray(this.ignoreFields)){Ext.each(this.ignoreFields,function(e){ignore[e]=true})}Ext.each(meta.columns||meta.fields,function(item){if(true===ignore[item.name]){return}var listeners={};if(Ext.isDefined(item.editor.listeners)){for(var listener in item.editor.listeners){if(item.editor.listeners.hasOwnProperty(listener)){listeners[listener]={scope:this,fn:eval(item.editor.listeners[listener])}}}delete item.editor.listeners}var config=Ext.apply({},item.editor,{name:item.name||item.dataIndex,fieldLabel:item.fieldLabel||item.header,defaultValue:item.defaultValue,xtype:item.editor&&item.editor.xtype?item.editor.xtype:"textfield",listeners:listeners});if(config.editor&&config.editor.regex){config.editor.regex=new RegExp(item.editor.regex)}if("checkbox"===config.xtype){Ext.apply(config,{boxLabel:" ",checked:item.defaultValue})}if(meta.formConfig.msgTarget){config.msgTarget=meta.formConfig.msgTarget}config.tabIndex=tabIndex++;columns.get(colIndex++).add(config);colIndex=colIndex===this.columnCount?0:colIndex},this);if(this.rendered&&"string"!==typeof this.layout){this.el.setVisible(false);this.doLayout();this.el.setVisible(true)}this.hasMeta=true;if(this.data){(function(){this.form.setValues(this.data)}).defer(1,this)}this.afterMetaChange();this.fireEvent("metachange",this,meta);if(this.focusFirstField){var firstField=this.form.items.itemAt(0);if(firstField&&firstField.focus){var delay=this.ownerCt&&this.ownerCt.isXType("window")?1e3:100;firstField.focus(firstField.selectOnFocus,delay)}}},onRender:function(){Ext.ux.form.MetaForm.superclass.onRender.apply(this,arguments);this.form.waitMsgTarget=this.el;if(this.metaData){this.onMetaChange(this,this.metaData);if(this.data){this.bindData(this.data)}}else if(true===this.autoInit){this.load(this.getOptions({params:{meta:true}}))}else if("object"===typeof this.autoInit){this.load(this.autoInit)}},removeAll:function(){var e=this.body.up("div.x-panel-bwrap").prev();if(e){e.applyStyles({border:"none"})}this.items.each(this.remove,this);this.form.items.clear()},reset:function(){this.form.reset()},setDefaultValues:function(){this.form.items.each(function(e){e.setValue(e.defaultValue)})},submit:function(e){var t=this.getOptions(e);if(this.savingText){t.waitMsg=this.savingText}this.form.submit(t)},updateBoundData:function(){if(this.data){Ext.apply(this.data,this.getValues());this.afterUpdate(this,this.data)}},beforeDestroy:function(){if(this.data){this.data=null}Ext.ux.form.MetaForm.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("metaform",Ext.ux.form.MetaForm)
